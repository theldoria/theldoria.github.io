<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Theldoria's Blog]]></title>
  <link href="http://theldoria.github.io/atom.xml" rel="self"/>
  <link href="http://theldoria.github.io/"/>
  <updated>2014-02-13T10:50:33+01:00</updated>
  <id>http://theldoria.github.io/</id>
  <author>
    <name><![CDATA[Theldoria]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Categories and Tags in Octopress]]></title>
    <link href="http://theldoria.github.io/blog/2013/06/26/categories-and-tags-in-octopress/"/>
    <updated>2013-06-26T12:39:00+02:00</updated>
    <id>http://theldoria.github.io/blog/2013/06/26/categories-and-tags-in-octopress</id>
    <content type="html"><![CDATA[<p>In order to add Categories and Tags pages, create those:</p>

<pre><code>rake new_page[blog/categories]
rake new_page[blog/tags]
</code></pre>

<p>And insert the following content:</p>

<figure class='code'><figcaption><span>blog/categories </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul>
</span><span class='line'>{% for item in site.categories %}
</span><span class='line'>    &lt;li>&lt;a href="http://theldoria.github.io/blog/categories/{{ item[0] }}/">{{ item[0] | capitalize }}&lt;/a> [ {{ item[1].size }} ]&lt;/li>
</span><span class='line'>{% endfor %}
</span><span class='line'>&lt;/ul></span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>plain blog/tags </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul>
</span><span class='line'>{% for item in site.tags %}
</span><span class='line'>    &lt;li>&lt;a href="http://theldoria.github.io/blog/tags/{{ item[0] }}/">{{ item[0] | capitalize }}&lt;/a> [ {{ item[1].size }} ]&lt;/li>
</span><span class='line'>{% endfor %}
</span><span class='line'>&lt;/ul></span></code></pre></td></tr></table></div></figure>


<p>Finally add them to the navigation bar:</p>

<figure class='code'><figcaption><span>plain source/_includes/custom/navigation.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/blog/categories&quot;</span><span class="nt">&gt;</span>Categories<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/blog/tags&quot;</span><span class="nt">&gt;</span>Tags<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying to Heroku]]></title>
    <link href="http://theldoria.github.io/blog/2013/06/26/deploying-to-heroku/"/>
    <updated>2013-06-26T11:52:00+02:00</updated>
    <id>http://theldoria.github.io/blog/2013/06/26/deploying-to-heroku</id>
    <content type="html"><![CDATA[<p>To add a new heroku app simply call:</p>

<pre><code>heroku create
</code></pre>

<p>You now should have a heroku remote. Check with:</p>

<pre><code>$ git remote -v
</code></pre>

<p>You can set heroku to be the default remote for push/free:</p>

<pre><code>$ git config branch.master.remote heroku
</code></pre>

<p>You can deploy with:</p>

<pre><code>$ git push heroku master
</code></pre>

<p>If you encounter the error <code>Permission denied (publickey).</code> while pushing, you may have to add your public key:</p>

<pre><code>$ heroku keys:add ~/.ssh/id_rsa.pub
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freezing vi]]></title>
    <link href="http://theldoria.github.io/blog/2013/06/26/freezing-vi/"/>
    <updated>2013-06-26T10:29:00+02:00</updated>
    <id>http://theldoria.github.io/blog/2013/06/26/freezing-vi</id>
    <content type="html"><![CDATA[<p>Today I stumbled over an frozen vi, after using <code>ctrl-s</code> (from a remote session). To resolve it simply use <code>ctrl-q</code>.</p>

<p>This can easily happen if you switch from emacs, where <code>C-x C-s</code> saves the buffer, to vi, where you have to use <code>ESC :w</code>.</p>

<p>The reason for this is the <a href="http://en.wikipedia.org/wiki/XON%20XON/XOFF">XON/XOFF protocol</a>. Sending <code>ctrl-s</code> is XOFF, stopping the communication (in one direction), and <code>ctrl-q</code> sends XON, reenabling the data exchange.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Post with octopress]]></title>
    <link href="http://theldoria.github.io/blog/2013/06/25/post-with-octopress/"/>
    <updated>2013-06-25T21:50:00+02:00</updated>
    <id>http://theldoria.github.io/blog/2013/06/25/post-with-octopress</id>
    <content type="html"><![CDATA[<p>This is my first post with octopress. Now I&rsquo;m gonna look around to find out how it work&rsquo;s and if I cand use it as a tool to store useful information an knowledge about hacking.</p>

<h2>Code Snippets</h2>

<p>First of all: it is possible to <a href="http://octopress.org/docs/blogging/code">include code snippets</a> in posts, in several ways, and for many languages. For example, a snippet for ruby, using backticks (used by github):</p>

<h3>Syntax</h3>

<pre><code>``` [language] [title] [url] [link text]
code snippet
```
</code></pre>

<h3>Example</h3>

<figure class='code'><figcaption><span>Small ruby backtick example</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">test</span><span class="p">()</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;color&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Without Highlighting</h3>

<p>For code, that does not need to be higlightes (e.g. for shell commands) one can use four spaces in front of the snippet:</p>

<pre><code>snippet
</code></pre>

<h3>Liquid</h3>

<p>One can also use <a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Designers">liquid</a> for code snippets. This has the ability to disable tag processing in order to add liquid examples.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% codeblock %}
</span><span class='line'>{% raw %}
</span><span class='line'>liquid-snippet
</span><span class='line'>{ % endraw % }
</span><span class='line'>{% endcodeblock %}</span></code></pre></td></tr></table></div></figure>


<h2>Links</h2>

<p>Links can be added by using <code>[link text](url)</code>.</p>

<h2>Posting</h2>

<p>Ok, now, in order to post octopress provides a rake command:</p>

<pre><code>$ rake new_post["title"]
</code></pre>

<p>This create a new file with right naming convention and puts the filename, so it can be opened with a text editor. I only whished I could set an editor which is fired automatically with the new file&hellip;</p>

<p>One can also create pages:</p>

<pre><code>$ rake new_page["page title"]
# creates /source/page-title/index.markdown

$ rake new_page[xyz/page.html]
# creates /source/xyz/page.html
</code></pre>

<p>But I am not shure, how those pages my be accessible. Possibly one is expected to add an link to them somewhere.</p>

<h2>Deploying</h2>

<p>If new posts are ready the blog can be newly generated and deployed:</p>

<pre><code>$ rake generate
$ rake deploy
</code></pre>
]]></content>
  </entry>
  
</feed>
